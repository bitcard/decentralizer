// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/storage.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// RPC
type RPCWriteUserFileRequest struct {
	Err string `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
}

func (m *RPCWriteUserFileRequest) Reset()                    { *m = RPCWriteUserFileRequest{} }
func (m *RPCWriteUserFileRequest) String() string            { return proto.CompactTextString(m) }
func (*RPCWriteUserFileRequest) ProtoMessage()               {}
func (*RPCWriteUserFileRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *RPCWriteUserFileRequest) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type RPCWriteUserFileResponse struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	File []byte `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
}

func (m *RPCWriteUserFileResponse) Reset()                    { *m = RPCWriteUserFileResponse{} }
func (m *RPCWriteUserFileResponse) String() string            { return proto.CompactTextString(m) }
func (*RPCWriteUserFileResponse) ProtoMessage()               {}
func (*RPCWriteUserFileResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

func (m *RPCWriteUserFileResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RPCWriteUserFileResponse) GetFile() []byte {
	if m != nil {
		return m.File
	}
	return nil
}

type RPCGetUserFileRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *RPCGetUserFileRequest) Reset()                    { *m = RPCGetUserFileRequest{} }
func (m *RPCGetUserFileRequest) String() string            { return proto.CompactTextString(m) }
func (*RPCGetUserFileRequest) ProtoMessage()               {}
func (*RPCGetUserFileRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{2} }

func (m *RPCGetUserFileRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type RPCGetUserFileResponse struct {
	Err  string `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
	File []byte `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
}

func (m *RPCGetUserFileResponse) Reset()                    { *m = RPCGetUserFileResponse{} }
func (m *RPCGetUserFileResponse) String() string            { return proto.CompactTextString(m) }
func (*RPCGetUserFileResponse) ProtoMessage()               {}
func (*RPCGetUserFileResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{3} }

func (m *RPCGetUserFileResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (m *RPCGetUserFileResponse) GetFile() []byte {
	if m != nil {
		return m.File
	}
	return nil
}

type RPCGetPublisherFileRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *RPCGetPublisherFileRequest) Reset()                    { *m = RPCGetPublisherFileRequest{} }
func (m *RPCGetPublisherFileRequest) String() string            { return proto.CompactTextString(m) }
func (*RPCGetPublisherFileRequest) ProtoMessage()               {}
func (*RPCGetPublisherFileRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{4} }

func (m *RPCGetPublisherFileRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type RPCGetPublisherFileResponse struct {
	Err  string `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
	File []byte `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
}

func (m *RPCGetPublisherFileResponse) Reset()                    { *m = RPCGetPublisherFileResponse{} }
func (m *RPCGetPublisherFileResponse) String() string            { return proto.CompactTextString(m) }
func (*RPCGetPublisherFileResponse) ProtoMessage()               {}
func (*RPCGetPublisherFileResponse) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{5} }

func (m *RPCGetPublisherFileResponse) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (m *RPCGetPublisherFileResponse) GetFile() []byte {
	if m != nil {
		return m.File
	}
	return nil
}

func init() {
	proto.RegisterType((*RPCWriteUserFileRequest)(nil), "pb.RPCWriteUserFileRequest")
	proto.RegisterType((*RPCWriteUserFileResponse)(nil), "pb.RPCWriteUserFileResponse")
	proto.RegisterType((*RPCGetUserFileRequest)(nil), "pb.RPCGetUserFileRequest")
	proto.RegisterType((*RPCGetUserFileResponse)(nil), "pb.RPCGetUserFileResponse")
	proto.RegisterType((*RPCGetPublisherFileRequest)(nil), "pb.RPCGetPublisherFileRequest")
	proto.RegisterType((*RPCGetPublisherFileResponse)(nil), "pb.RPCGetPublisherFileResponse")
}

func init() { proto.RegisterFile("pb/storage.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 182 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x28, 0x48, 0xd2, 0x2f,
	0x2e, 0xc9, 0x2f, 0x4a, 0x4c, 0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48,
	0x52, 0xd2, 0xe6, 0x12, 0x0f, 0x0a, 0x70, 0x0e, 0x2f, 0xca, 0x2c, 0x49, 0x0d, 0x2d, 0x4e, 0x2d,
	0x72, 0xcb, 0xcc, 0x49, 0x0d, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe0, 0x62, 0x4e,
	0x2d, 0x2a, 0x92, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0x31, 0x95, 0x9c, 0xb8, 0x24, 0x30,
	0x15, 0x17, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x0a, 0x09, 0x71, 0xb1, 0xe4, 0x25, 0xe6, 0xa6, 0x42,
	0x95, 0x83, 0xd9, 0x20, 0xb1, 0xb4, 0xcc, 0x9c, 0x54, 0x09, 0x26, 0x05, 0x46, 0x0d, 0x9e, 0x20,
	0x30, 0x5b, 0x49, 0x9b, 0x4b, 0x34, 0x28, 0xc0, 0xd9, 0x3d, 0xb5, 0x04, 0xdd, 0x3a, 0x2c, 0x06,
	0x28, 0xd9, 0x71, 0x89, 0xa1, 0x2b, 0x86, 0x5a, 0x87, 0xe1, 0x38, 0xac, 0x96, 0x19, 0x70, 0x49,
	0x41, 0xf4, 0x07, 0x94, 0x26, 0xe5, 0x64, 0x16, 0x67, 0x10, 0xb6, 0xd1, 0x99, 0x4b, 0x1a, 0xab,
	0x0e, 0x52, 0xac, 0x4d, 0x62, 0x03, 0x87, 0xaf, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x1d, 0x0b,
	0xe8, 0x29, 0x73, 0x01, 0x00, 0x00,
}
