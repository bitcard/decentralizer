syntax = "proto3";
package pb;

message Session {
    string pId = 1;//PeerId
    uint64 dnId = 2;

    uint64 sessionId = 3;
    uint64 type = 4;
    string name = 5;
    uint32 address = 6;
    uint32 port = 7;
    map<string, string> details = 8;
    uint64 published = 9;
}

//DN messages
message DNSessionsRecord {
    uint64 published = 1;
    repeated Session results = 2;
}

message DNSessionsResponse {
    repeated Session results = 1;
}

message DNSessionsRequest {
    uint64 type = 1;
    repeated uint64 sessionIds = 2;
}

message DNSessionidsResponse {
    repeated uint64 sessionIds = 1;
}

message DNSessionidsRequest {
    uint64 type = 1;
}

//RPC messages

//Upsert
message RPCUpsertSessionRequest {
    Session session = 1;
}

message RPCUpsertSessionResponse {
    uint64 sessionId = 1;
}

//Delete
message RPCDeleteSessionRequest {
    uint64 sessionId = 1;
}

message RPCDeleteSessionResponse {
    bool result = 1;
}

//Get session ids
message RPCGetSessionIdsByDetailsRequest {
    uint64 type = 1;
    string key = 2;
    string value = 3;
}

message RPCGetSessionIdsByPeerIdsRequest {
    repeated string peerIds = 1;
}

message RPCGetSessionIdsResponse {
    repeated uint64 sessionIds = 1;
}

//Fetch an individual session
message RPCGetSessionRequest {
    uint64 sessionId = 1;
}

message RPCGetSessionResponse {
    Session session = 1;
}