syntax = "proto3";
package pb;

message Peer {
    //If pId == "self". We'll resolve it to our peerId.
    string pId = 1;//PeerId
    uint64 dnId = 2;
    map<string, string> details = 3;
    repeated string addrs = 4;
}

message DNPeerResponse {
    Peer peer = 1;
}

message DNPeerRequest {}

message DNAddressbook {
    repeated Peer peers = 1;
}

//RPC messages

//upsert
message RPCUpsertPeerRequest {
    Peer peer = 1;
}

message RPCUpsertPeerResponse {}

//Get peer ids
message RPCGetPeerIdsRequest {
    //Key in the details map
    string key = 1;
    // Value in the details map.
    string value = 2;
}

message RPCGetPeerIdsResponse {
    repeated string peerIds = 1;
}

//Get individual peer
message RPCGetPeerRequest {
    //If pId == "self". We'll resolve it to our peerId.
    //Either one must be filled in. If both are specified. preference goes to pId
    string pId = 1;
    uint64 dnId = 2;
}

message RPCGetPeerResponse {
    Peer peer = 1;
}