package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// Peer peer
// swagger:model Peer
type Peer struct {

	// Anything. All the details the peer wants to mention to others.
	Details interface{} `json:"details,omitempty"`

	// The IP address of the peer
	// Required: true
	// Read Only: true
	IP strfmt.IPv4 `json:"ip"`

	// The port of the peer's service.
	// Required: true
	// Read Only: true
	Port int32 `json:"port"`
}

// Validate validates this peer
func (m *Peer) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIP(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePort(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Peer) validateIP(formats strfmt.Registry) error {

	if err := validate.Required("ip", "body", strfmt.IPv4(m.IP)); err != nil {
		return err
	}

	return nil
}

func (m *Peer) validatePort(formats strfmt.Registry) error {

	if err := validate.Required("port", "body", int32(m.Port)); err != nil {
		return err
	}

	return nil
}
