// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pb/messaging.proto

#include "pb/messaging.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace pb {
class DNDirectMessageResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DNDirectMessageResponse>
      _instance;
} _DNDirectMessageResponse_default_instance_;
class DNDirectMessageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DNDirectMessageRequest>
      _instance;
} _DNDirectMessageRequest_default_instance_;
class RPCReceiveDirectMessageRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RPCReceiveDirectMessageRequest>
      _instance;
} _RPCReceiveDirectMessageRequest_default_instance_;
class RPCDirectMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RPCDirectMessage>
      _instance;
} _RPCDirectMessage_default_instance_;
}  // namespace pb
namespace protobuf_pb_2fmessaging_2eproto {
static void InitDefaultsDNDirectMessageResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_DNDirectMessageResponse_default_instance_;
    new (ptr) ::pb::DNDirectMessageResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::DNDirectMessageResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DNDirectMessageResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDNDirectMessageResponse}, {}};

static void InitDefaultsDNDirectMessageRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_DNDirectMessageRequest_default_instance_;
    new (ptr) ::pb::DNDirectMessageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::DNDirectMessageRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DNDirectMessageRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDNDirectMessageRequest}, {}};

static void InitDefaultsRPCReceiveDirectMessageRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_RPCReceiveDirectMessageRequest_default_instance_;
    new (ptr) ::pb::RPCReceiveDirectMessageRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::RPCReceiveDirectMessageRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RPCReceiveDirectMessageRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRPCReceiveDirectMessageRequest}, {}};

static void InitDefaultsRPCDirectMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_RPCDirectMessage_default_instance_;
    new (ptr) ::pb::RPCDirectMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::RPCDirectMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RPCDirectMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRPCDirectMessage}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_DNDirectMessageResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DNDirectMessageRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RPCReceiveDirectMessageRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RPCDirectMessage.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DNDirectMessageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DNDirectMessageResponse, delivered_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DNDirectMessageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DNDirectMessageRequest, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::DNDirectMessageRequest, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::RPCReceiveDirectMessageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::RPCReceiveDirectMessageRequest, channel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::RPCDirectMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::RPCDirectMessage, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::RPCDirectMessage, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::RPCDirectMessage, message_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pb::DNDirectMessageResponse)},
  { 6, -1, sizeof(::pb::DNDirectMessageRequest)},
  { 13, -1, sizeof(::pb::RPCReceiveDirectMessageRequest)},
  { 19, -1, sizeof(::pb::RPCDirectMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_DNDirectMessageResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_DNDirectMessageRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_RPCReceiveDirectMessageRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_RPCDirectMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "pb/messaging.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022pb/messaging.proto\022\002pb\",\n\027DNDirectMess"
      "ageResponse\022\021\n\tdelivered\030\001 \001(\010\":\n\026DNDire"
      "ctMessageRequest\022\017\n\007channel\030\001 \001(\r\022\017\n\007mes"
      "sage\030\002 \001(\014\"1\n\036RPCReceiveDirectMessageReq"
      "uest\022\017\n\007channel\030\001 \001(\r\"A\n\020RPCDirectMessag"
      "e\022\017\n\007channel\030\001 \001(\r\022\013\n\003pId\030\002 \001(\t\022\017\n\007messa"
      "ge\030\003 \001(\014b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 256);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "pb/messaging.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_pb_2fmessaging_2eproto
namespace pb {

// ===================================================================

void DNDirectMessageResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DNDirectMessageResponse::kDeliveredFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DNDirectMessageResponse::DNDirectMessageResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_pb_2fmessaging_2eproto::scc_info_DNDirectMessageResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.DNDirectMessageResponse)
}
DNDirectMessageResponse::DNDirectMessageResponse(const DNDirectMessageResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  delivered_ = from.delivered_;
  // @@protoc_insertion_point(copy_constructor:pb.DNDirectMessageResponse)
}

void DNDirectMessageResponse::SharedCtor() {
  delivered_ = false;
}

DNDirectMessageResponse::~DNDirectMessageResponse() {
  // @@protoc_insertion_point(destructor:pb.DNDirectMessageResponse)
  SharedDtor();
}

void DNDirectMessageResponse::SharedDtor() {
}

void DNDirectMessageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DNDirectMessageResponse::descriptor() {
  ::protobuf_pb_2fmessaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pb_2fmessaging_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DNDirectMessageResponse& DNDirectMessageResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_pb_2fmessaging_2eproto::scc_info_DNDirectMessageResponse.base);
  return *internal_default_instance();
}


void DNDirectMessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.DNDirectMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  delivered_ = false;
  _internal_metadata_.Clear();
}

bool DNDirectMessageResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.DNDirectMessageResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool delivered = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &delivered_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.DNDirectMessageResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.DNDirectMessageResponse)
  return false;
#undef DO_
}

void DNDirectMessageResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.DNDirectMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool delivered = 1;
  if (this->delivered() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->delivered(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.DNDirectMessageResponse)
}

::google::protobuf::uint8* DNDirectMessageResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.DNDirectMessageResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool delivered = 1;
  if (this->delivered() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->delivered(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.DNDirectMessageResponse)
  return target;
}

size_t DNDirectMessageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.DNDirectMessageResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool delivered = 1;
  if (this->delivered() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DNDirectMessageResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.DNDirectMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DNDirectMessageResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DNDirectMessageResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.DNDirectMessageResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.DNDirectMessageResponse)
    MergeFrom(*source);
  }
}

void DNDirectMessageResponse::MergeFrom(const DNDirectMessageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.DNDirectMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.delivered() != 0) {
    set_delivered(from.delivered());
  }
}

void DNDirectMessageResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.DNDirectMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DNDirectMessageResponse::CopyFrom(const DNDirectMessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.DNDirectMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DNDirectMessageResponse::IsInitialized() const {
  return true;
}

void DNDirectMessageResponse::Swap(DNDirectMessageResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DNDirectMessageResponse::InternalSwap(DNDirectMessageResponse* other) {
  using std::swap;
  swap(delivered_, other->delivered_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DNDirectMessageResponse::GetMetadata() const {
  protobuf_pb_2fmessaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pb_2fmessaging_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DNDirectMessageRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DNDirectMessageRequest::kChannelFieldNumber;
const int DNDirectMessageRequest::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DNDirectMessageRequest::DNDirectMessageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_pb_2fmessaging_2eproto::scc_info_DNDirectMessageRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.DNDirectMessageRequest)
}
DNDirectMessageRequest::DNDirectMessageRequest(const DNDirectMessageRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  channel_ = from.channel_;
  // @@protoc_insertion_point(copy_constructor:pb.DNDirectMessageRequest)
}

void DNDirectMessageRequest::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_ = 0u;
}

DNDirectMessageRequest::~DNDirectMessageRequest() {
  // @@protoc_insertion_point(destructor:pb.DNDirectMessageRequest)
  SharedDtor();
}

void DNDirectMessageRequest::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DNDirectMessageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DNDirectMessageRequest::descriptor() {
  ::protobuf_pb_2fmessaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pb_2fmessaging_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DNDirectMessageRequest& DNDirectMessageRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_pb_2fmessaging_2eproto::scc_info_DNDirectMessageRequest.base);
  return *internal_default_instance();
}


void DNDirectMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.DNDirectMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_ = 0u;
  _internal_metadata_.Clear();
}

bool DNDirectMessageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.DNDirectMessageRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 channel = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.DNDirectMessageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.DNDirectMessageRequest)
  return false;
#undef DO_
}

void DNDirectMessageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.DNDirectMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channel = 1;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->channel(), output);
  }

  // bytes message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.DNDirectMessageRequest)
}

::google::protobuf::uint8* DNDirectMessageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.DNDirectMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channel = 1;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->channel(), target);
  }

  // bytes message = 2;
  if (this->message().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.DNDirectMessageRequest)
  return target;
}

size_t DNDirectMessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.DNDirectMessageRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->message());
  }

  // uint32 channel = 1;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->channel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DNDirectMessageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.DNDirectMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DNDirectMessageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DNDirectMessageRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.DNDirectMessageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.DNDirectMessageRequest)
    MergeFrom(*source);
  }
}

void DNDirectMessageRequest::MergeFrom(const DNDirectMessageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.DNDirectMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
}

void DNDirectMessageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.DNDirectMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DNDirectMessageRequest::CopyFrom(const DNDirectMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.DNDirectMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DNDirectMessageRequest::IsInitialized() const {
  return true;
}

void DNDirectMessageRequest::Swap(DNDirectMessageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DNDirectMessageRequest::InternalSwap(DNDirectMessageRequest* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(channel_, other->channel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DNDirectMessageRequest::GetMetadata() const {
  protobuf_pb_2fmessaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pb_2fmessaging_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RPCReceiveDirectMessageRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RPCReceiveDirectMessageRequest::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RPCReceiveDirectMessageRequest::RPCReceiveDirectMessageRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_pb_2fmessaging_2eproto::scc_info_RPCReceiveDirectMessageRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RPCReceiveDirectMessageRequest)
}
RPCReceiveDirectMessageRequest::RPCReceiveDirectMessageRequest(const RPCReceiveDirectMessageRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  channel_ = from.channel_;
  // @@protoc_insertion_point(copy_constructor:pb.RPCReceiveDirectMessageRequest)
}

void RPCReceiveDirectMessageRequest::SharedCtor() {
  channel_ = 0u;
}

RPCReceiveDirectMessageRequest::~RPCReceiveDirectMessageRequest() {
  // @@protoc_insertion_point(destructor:pb.RPCReceiveDirectMessageRequest)
  SharedDtor();
}

void RPCReceiveDirectMessageRequest::SharedDtor() {
}

void RPCReceiveDirectMessageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RPCReceiveDirectMessageRequest::descriptor() {
  ::protobuf_pb_2fmessaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pb_2fmessaging_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RPCReceiveDirectMessageRequest& RPCReceiveDirectMessageRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_pb_2fmessaging_2eproto::scc_info_RPCReceiveDirectMessageRequest.base);
  return *internal_default_instance();
}


void RPCReceiveDirectMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RPCReceiveDirectMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channel_ = 0u;
  _internal_metadata_.Clear();
}

bool RPCReceiveDirectMessageRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RPCReceiveDirectMessageRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 channel = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RPCReceiveDirectMessageRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RPCReceiveDirectMessageRequest)
  return false;
#undef DO_
}

void RPCReceiveDirectMessageRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RPCReceiveDirectMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channel = 1;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->channel(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RPCReceiveDirectMessageRequest)
}

::google::protobuf::uint8* RPCReceiveDirectMessageRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.RPCReceiveDirectMessageRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channel = 1;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->channel(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RPCReceiveDirectMessageRequest)
  return target;
}

size_t RPCReceiveDirectMessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RPCReceiveDirectMessageRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 channel = 1;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->channel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RPCReceiveDirectMessageRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RPCReceiveDirectMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RPCReceiveDirectMessageRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RPCReceiveDirectMessageRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RPCReceiveDirectMessageRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RPCReceiveDirectMessageRequest)
    MergeFrom(*source);
  }
}

void RPCReceiveDirectMessageRequest::MergeFrom(const RPCReceiveDirectMessageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RPCReceiveDirectMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.channel() != 0) {
    set_channel(from.channel());
  }
}

void RPCReceiveDirectMessageRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RPCReceiveDirectMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RPCReceiveDirectMessageRequest::CopyFrom(const RPCReceiveDirectMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RPCReceiveDirectMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RPCReceiveDirectMessageRequest::IsInitialized() const {
  return true;
}

void RPCReceiveDirectMessageRequest::Swap(RPCReceiveDirectMessageRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RPCReceiveDirectMessageRequest::InternalSwap(RPCReceiveDirectMessageRequest* other) {
  using std::swap;
  swap(channel_, other->channel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RPCReceiveDirectMessageRequest::GetMetadata() const {
  protobuf_pb_2fmessaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pb_2fmessaging_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RPCDirectMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RPCDirectMessage::kChannelFieldNumber;
const int RPCDirectMessage::kPIdFieldNumber;
const int RPCDirectMessage::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RPCDirectMessage::RPCDirectMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_pb_2fmessaging_2eproto::scc_info_RPCDirectMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RPCDirectMessage)
}
RPCDirectMessage::RPCDirectMessage(const RPCDirectMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pid().size() > 0) {
    pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pid_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  channel_ = from.channel_;
  // @@protoc_insertion_point(copy_constructor:pb.RPCDirectMessage)
}

void RPCDirectMessage::SharedCtor() {
  pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_ = 0u;
}

RPCDirectMessage::~RPCDirectMessage() {
  // @@protoc_insertion_point(destructor:pb.RPCDirectMessage)
  SharedDtor();
}

void RPCDirectMessage::SharedDtor() {
  pid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RPCDirectMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RPCDirectMessage::descriptor() {
  ::protobuf_pb_2fmessaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pb_2fmessaging_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RPCDirectMessage& RPCDirectMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_pb_2fmessaging_2eproto::scc_info_RPCDirectMessage.base);
  return *internal_default_instance();
}


void RPCDirectMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RPCDirectMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_ = 0u;
  _internal_metadata_.Clear();
}

bool RPCDirectMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RPCDirectMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 channel = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pid().data(), static_cast<int>(this->pid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.RPCDirectMessage.pId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RPCDirectMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RPCDirectMessage)
  return false;
#undef DO_
}

void RPCDirectMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RPCDirectMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channel = 1;
  if (this->channel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->channel(), output);
  }

  // string pId = 2;
  if (this->pid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pid().data(), static_cast<int>(this->pid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.RPCDirectMessage.pId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pid(), output);
  }

  // bytes message = 3;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RPCDirectMessage)
}

::google::protobuf::uint8* RPCDirectMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.RPCDirectMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channel = 1;
  if (this->channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->channel(), target);
  }

  // string pId = 2;
  if (this->pid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pid().data(), static_cast<int>(this->pid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.RPCDirectMessage.pId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pid(), target);
  }

  // bytes message = 3;
  if (this->message().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RPCDirectMessage)
  return target;
}

size_t RPCDirectMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RPCDirectMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string pId = 2;
  if (this->pid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pid());
  }

  // bytes message = 3;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->message());
  }

  // uint32 channel = 1;
  if (this->channel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->channel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RPCDirectMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RPCDirectMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const RPCDirectMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RPCDirectMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RPCDirectMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RPCDirectMessage)
    MergeFrom(*source);
  }
}

void RPCDirectMessage::MergeFrom(const RPCDirectMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RPCDirectMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pid().size() > 0) {

    pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pid_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.channel() != 0) {
    set_channel(from.channel());
  }
}

void RPCDirectMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RPCDirectMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RPCDirectMessage::CopyFrom(const RPCDirectMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RPCDirectMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RPCDirectMessage::IsInitialized() const {
  return true;
}

void RPCDirectMessage::Swap(RPCDirectMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RPCDirectMessage::InternalSwap(RPCDirectMessage* other) {
  using std::swap;
  pid_.Swap(&other->pid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(channel_, other->channel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RPCDirectMessage::GetMetadata() const {
  protobuf_pb_2fmessaging_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pb_2fmessaging_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::DNDirectMessageResponse* Arena::CreateMaybeMessage< ::pb::DNDirectMessageResponse >(Arena* arena) {
  return Arena::CreateInternal< ::pb::DNDirectMessageResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::DNDirectMessageRequest* Arena::CreateMaybeMessage< ::pb::DNDirectMessageRequest >(Arena* arena) {
  return Arena::CreateInternal< ::pb::DNDirectMessageRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::RPCReceiveDirectMessageRequest* Arena::CreateMaybeMessage< ::pb::RPCReceiveDirectMessageRequest >(Arena* arena) {
  return Arena::CreateInternal< ::pb::RPCReceiveDirectMessageRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::RPCDirectMessage* Arena::CreateMaybeMessage< ::pb::RPCDirectMessage >(Arena* arena) {
  return Arena::CreateInternal< ::pb::RPCDirectMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
