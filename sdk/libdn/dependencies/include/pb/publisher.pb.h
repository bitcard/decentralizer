// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pb/publisher.proto

#ifndef PROTOBUF_pb_2fpublisher_2eproto__INCLUDED
#define PROTOBUF_pb_2fpublisher_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_pb_2fpublisher_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[11];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsPublisherDefinition_FilesEntry_DoNotUseImpl();
void InitDefaultsPublisherDefinition_FilesEntry_DoNotUse();
void InitDefaultsPublisherDefinition_LinksEntry_DoNotUseImpl();
void InitDefaultsPublisherDefinition_LinksEntry_DoNotUse();
void InitDefaultsPublisherDefinition_DetailsEntry_DoNotUseImpl();
void InitDefaultsPublisherDefinition_DetailsEntry_DoNotUse();
void InitDefaultsPublisherDefinitionImpl();
void InitDefaultsPublisherDefinition();
void InitDefaultsPublisherUpdateImpl();
void InitDefaultsPublisherUpdate();
void InitDefaultsDNPublisherUpdateRequestImpl();
void InitDefaultsDNPublisherUpdateRequest();
void InitDefaultsDNPublisherUpdateResponseImpl();
void InitDefaultsDNPublisherUpdateResponse();
void InitDefaultsRPCPublishPublisherUpdateRequestImpl();
void InitDefaultsRPCPublishPublisherUpdateRequest();
void InitDefaultsRPCGetPublisherFileRequestImpl();
void InitDefaultsRPCGetPublisherFileRequest();
void InitDefaultsRPCGetPublisherFileResponseImpl();
void InitDefaultsRPCGetPublisherFileResponse();
void InitDefaultsGetPublisherDefinitionRequestImpl();
void InitDefaultsGetPublisherDefinitionRequest();
inline void InitDefaults() {
  InitDefaultsPublisherDefinition_FilesEntry_DoNotUse();
  InitDefaultsPublisherDefinition_LinksEntry_DoNotUse();
  InitDefaultsPublisherDefinition_DetailsEntry_DoNotUse();
  InitDefaultsPublisherDefinition();
  InitDefaultsPublisherUpdate();
  InitDefaultsDNPublisherUpdateRequest();
  InitDefaultsDNPublisherUpdateResponse();
  InitDefaultsRPCPublishPublisherUpdateRequest();
  InitDefaultsRPCGetPublisherFileRequest();
  InitDefaultsRPCGetPublisherFileResponse();
  InitDefaultsGetPublisherDefinitionRequest();
}
}  // namespace protobuf_pb_2fpublisher_2eproto
namespace pb {
class DNPublisherUpdateRequest;
class DNPublisherUpdateRequestDefaultTypeInternal;
extern DNPublisherUpdateRequestDefaultTypeInternal _DNPublisherUpdateRequest_default_instance_;
class DNPublisherUpdateResponse;
class DNPublisherUpdateResponseDefaultTypeInternal;
extern DNPublisherUpdateResponseDefaultTypeInternal _DNPublisherUpdateResponse_default_instance_;
class GetPublisherDefinitionRequest;
class GetPublisherDefinitionRequestDefaultTypeInternal;
extern GetPublisherDefinitionRequestDefaultTypeInternal _GetPublisherDefinitionRequest_default_instance_;
class PublisherDefinition;
class PublisherDefinitionDefaultTypeInternal;
extern PublisherDefinitionDefaultTypeInternal _PublisherDefinition_default_instance_;
class PublisherDefinition_DetailsEntry_DoNotUse;
class PublisherDefinition_DetailsEntry_DoNotUseDefaultTypeInternal;
extern PublisherDefinition_DetailsEntry_DoNotUseDefaultTypeInternal _PublisherDefinition_DetailsEntry_DoNotUse_default_instance_;
class PublisherDefinition_FilesEntry_DoNotUse;
class PublisherDefinition_FilesEntry_DoNotUseDefaultTypeInternal;
extern PublisherDefinition_FilesEntry_DoNotUseDefaultTypeInternal _PublisherDefinition_FilesEntry_DoNotUse_default_instance_;
class PublisherDefinition_LinksEntry_DoNotUse;
class PublisherDefinition_LinksEntry_DoNotUseDefaultTypeInternal;
extern PublisherDefinition_LinksEntry_DoNotUseDefaultTypeInternal _PublisherDefinition_LinksEntry_DoNotUse_default_instance_;
class PublisherUpdate;
class PublisherUpdateDefaultTypeInternal;
extern PublisherUpdateDefaultTypeInternal _PublisherUpdate_default_instance_;
class RPCGetPublisherFileRequest;
class RPCGetPublisherFileRequestDefaultTypeInternal;
extern RPCGetPublisherFileRequestDefaultTypeInternal _RPCGetPublisherFileRequest_default_instance_;
class RPCGetPublisherFileResponse;
class RPCGetPublisherFileResponseDefaultTypeInternal;
extern RPCGetPublisherFileResponseDefaultTypeInternal _RPCGetPublisherFileResponse_default_instance_;
class RPCPublishPublisherUpdateRequest;
class RPCPublishPublisherUpdateRequestDefaultTypeInternal;
extern RPCPublishPublisherUpdateRequestDefaultTypeInternal _RPCPublishPublisherUpdateRequest_default_instance_;
}  // namespace pb
namespace pb {

// ===================================================================

class PublisherDefinition_FilesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<PublisherDefinition_FilesEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<PublisherDefinition_FilesEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  PublisherDefinition_FilesEntry_DoNotUse();
  PublisherDefinition_FilesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PublisherDefinition_FilesEntry_DoNotUse& other);
  static const PublisherDefinition_FilesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PublisherDefinition_FilesEntry_DoNotUse*>(&_PublisherDefinition_FilesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class PublisherDefinition_LinksEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<PublisherDefinition_LinksEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<PublisherDefinition_LinksEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  PublisherDefinition_LinksEntry_DoNotUse();
  PublisherDefinition_LinksEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PublisherDefinition_LinksEntry_DoNotUse& other);
  static const PublisherDefinition_LinksEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PublisherDefinition_LinksEntry_DoNotUse*>(&_PublisherDefinition_LinksEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class PublisherDefinition_DetailsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<PublisherDefinition_DetailsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<PublisherDefinition_DetailsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  PublisherDefinition_DetailsEntry_DoNotUse();
  PublisherDefinition_DetailsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PublisherDefinition_DetailsEntry_DoNotUse& other);
  static const PublisherDefinition_DetailsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PublisherDefinition_DetailsEntry_DoNotUse*>(&_PublisherDefinition_DetailsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class PublisherDefinition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.PublisherDefinition) */ {
 public:
  PublisherDefinition();
  virtual ~PublisherDefinition();

  PublisherDefinition(const PublisherDefinition& from);

  inline PublisherDefinition& operator=(const PublisherDefinition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PublisherDefinition(PublisherDefinition&& from) noexcept
    : PublisherDefinition() {
    *this = ::std::move(from);
  }

  inline PublisherDefinition& operator=(PublisherDefinition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PublisherDefinition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PublisherDefinition* internal_default_instance() {
    return reinterpret_cast<const PublisherDefinition*>(
               &_PublisherDefinition_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(PublisherDefinition* other);
  friend void swap(PublisherDefinition& a, PublisherDefinition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PublisherDefinition* New() const PROTOBUF_FINAL { return New(NULL); }

  PublisherDefinition* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PublisherDefinition& from);
  void MergeFrom(const PublisherDefinition& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PublisherDefinition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, bytes> files = 2;
  int files_size() const;
  void clear_files();
  static const int kFilesFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      files() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_files();

  // map<string, string> links = 3;
  int links_size() const;
  void clear_links();
  static const int kLinksFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      links() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_links();

  // map<string, string> details = 4;
  int details_size() const;
  void clear_details();
  static const int kDetailsFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      details() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_details();

  // int64 created = 1;
  void clear_created();
  static const int kCreatedFieldNumber = 1;
  ::google::protobuf::int64 created() const;
  void set_created(::google::protobuf::int64 value);

  // bool status = 5;
  void clear_status();
  static const int kStatusFieldNumber = 5;
  bool status() const;
  void set_status(bool value);

  // @@protoc_insertion_point(class_scope:pb.PublisherDefinition)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      PublisherDefinition_FilesEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > files_;
  ::google::protobuf::internal::MapField<
      PublisherDefinition_LinksEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > links_;
  ::google::protobuf::internal::MapField<
      PublisherDefinition_DetailsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > details_;
  ::google::protobuf::int64 created_;
  bool status_;
  mutable int _cached_size_;
  friend struct ::protobuf_pb_2fpublisher_2eproto::TableStruct;
  friend void ::protobuf_pb_2fpublisher_2eproto::InitDefaultsPublisherDefinitionImpl();
};
// -------------------------------------------------------------------

class PublisherUpdate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.PublisherUpdate) */ {
 public:
  PublisherUpdate();
  virtual ~PublisherUpdate();

  PublisherUpdate(const PublisherUpdate& from);

  inline PublisherUpdate& operator=(const PublisherUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PublisherUpdate(PublisherUpdate&& from) noexcept
    : PublisherUpdate() {
    *this = ::std::move(from);
  }

  inline PublisherUpdate& operator=(PublisherUpdate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PublisherUpdate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PublisherUpdate* internal_default_instance() {
    return reinterpret_cast<const PublisherUpdate*>(
               &_PublisherUpdate_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(PublisherUpdate* other);
  friend void swap(PublisherUpdate& a, PublisherUpdate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PublisherUpdate* New() const PROTOBUF_FINAL { return New(NULL); }

  PublisherUpdate* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PublisherUpdate& from);
  void MergeFrom(const PublisherUpdate& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PublisherUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes signature = 2;
  void clear_signature();
  static const int kSignatureFieldNumber = 2;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const void* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // bytes definition = 3;
  void clear_definition();
  static const int kDefinitionFieldNumber = 3;
  const ::std::string& definition() const;
  void set_definition(const ::std::string& value);
  #if LANG_CXX11
  void set_definition(::std::string&& value);
  #endif
  void set_definition(const char* value);
  void set_definition(const void* value, size_t size);
  ::std::string* mutable_definition();
  ::std::string* release_definition();
  void set_allocated_definition(::std::string* definition);

  // @@protoc_insertion_point(class_scope:pb.PublisherUpdate)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  ::google::protobuf::internal::ArenaStringPtr definition_;
  mutable int _cached_size_;
  friend struct ::protobuf_pb_2fpublisher_2eproto::TableStruct;
  friend void ::protobuf_pb_2fpublisher_2eproto::InitDefaultsPublisherUpdateImpl();
};
// -------------------------------------------------------------------

class DNPublisherUpdateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.DNPublisherUpdateRequest) */ {
 public:
  DNPublisherUpdateRequest();
  virtual ~DNPublisherUpdateRequest();

  DNPublisherUpdateRequest(const DNPublisherUpdateRequest& from);

  inline DNPublisherUpdateRequest& operator=(const DNPublisherUpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DNPublisherUpdateRequest(DNPublisherUpdateRequest&& from) noexcept
    : DNPublisherUpdateRequest() {
    *this = ::std::move(from);
  }

  inline DNPublisherUpdateRequest& operator=(DNPublisherUpdateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DNPublisherUpdateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DNPublisherUpdateRequest* internal_default_instance() {
    return reinterpret_cast<const DNPublisherUpdateRequest*>(
               &_DNPublisherUpdateRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(DNPublisherUpdateRequest* other);
  friend void swap(DNPublisherUpdateRequest& a, DNPublisherUpdateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DNPublisherUpdateRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DNPublisherUpdateRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DNPublisherUpdateRequest& from);
  void MergeFrom(const DNPublisherUpdateRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DNPublisherUpdateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pb.DNPublisherUpdateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_pb_2fpublisher_2eproto::TableStruct;
  friend void ::protobuf_pb_2fpublisher_2eproto::InitDefaultsDNPublisherUpdateRequestImpl();
};
// -------------------------------------------------------------------

class DNPublisherUpdateResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.DNPublisherUpdateResponse) */ {
 public:
  DNPublisherUpdateResponse();
  virtual ~DNPublisherUpdateResponse();

  DNPublisherUpdateResponse(const DNPublisherUpdateResponse& from);

  inline DNPublisherUpdateResponse& operator=(const DNPublisherUpdateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DNPublisherUpdateResponse(DNPublisherUpdateResponse&& from) noexcept
    : DNPublisherUpdateResponse() {
    *this = ::std::move(from);
  }

  inline DNPublisherUpdateResponse& operator=(DNPublisherUpdateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DNPublisherUpdateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DNPublisherUpdateResponse* internal_default_instance() {
    return reinterpret_cast<const DNPublisherUpdateResponse*>(
               &_DNPublisherUpdateResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(DNPublisherUpdateResponse* other);
  friend void swap(DNPublisherUpdateResponse& a, DNPublisherUpdateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DNPublisherUpdateResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  DNPublisherUpdateResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DNPublisherUpdateResponse& from);
  void MergeFrom(const DNPublisherUpdateResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DNPublisherUpdateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .pb.PublisherUpdate update = 1;
  bool has_update() const;
  void clear_update();
  static const int kUpdateFieldNumber = 1;
  const ::pb::PublisherUpdate& update() const;
  ::pb::PublisherUpdate* release_update();
  ::pb::PublisherUpdate* mutable_update();
  void set_allocated_update(::pb::PublisherUpdate* update);

  // @@protoc_insertion_point(class_scope:pb.DNPublisherUpdateResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::pb::PublisherUpdate* update_;
  mutable int _cached_size_;
  friend struct ::protobuf_pb_2fpublisher_2eproto::TableStruct;
  friend void ::protobuf_pb_2fpublisher_2eproto::InitDefaultsDNPublisherUpdateResponseImpl();
};
// -------------------------------------------------------------------

class RPCPublishPublisherUpdateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.RPCPublishPublisherUpdateRequest) */ {
 public:
  RPCPublishPublisherUpdateRequest();
  virtual ~RPCPublishPublisherUpdateRequest();

  RPCPublishPublisherUpdateRequest(const RPCPublishPublisherUpdateRequest& from);

  inline RPCPublishPublisherUpdateRequest& operator=(const RPCPublishPublisherUpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RPCPublishPublisherUpdateRequest(RPCPublishPublisherUpdateRequest&& from) noexcept
    : RPCPublishPublisherUpdateRequest() {
    *this = ::std::move(from);
  }

  inline RPCPublishPublisherUpdateRequest& operator=(RPCPublishPublisherUpdateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RPCPublishPublisherUpdateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RPCPublishPublisherUpdateRequest* internal_default_instance() {
    return reinterpret_cast<const RPCPublishPublisherUpdateRequest*>(
               &_RPCPublishPublisherUpdateRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(RPCPublishPublisherUpdateRequest* other);
  friend void swap(RPCPublishPublisherUpdateRequest& a, RPCPublishPublisherUpdateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RPCPublishPublisherUpdateRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  RPCPublishPublisherUpdateRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RPCPublishPublisherUpdateRequest& from);
  void MergeFrom(const RPCPublishPublisherUpdateRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RPCPublishPublisherUpdateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .pb.PublisherDefinition definition = 1;
  bool has_definition() const;
  void clear_definition();
  static const int kDefinitionFieldNumber = 1;
  const ::pb::PublisherDefinition& definition() const;
  ::pb::PublisherDefinition* release_definition();
  ::pb::PublisherDefinition* mutable_definition();
  void set_allocated_definition(::pb::PublisherDefinition* definition);

  // @@protoc_insertion_point(class_scope:pb.RPCPublishPublisherUpdateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::pb::PublisherDefinition* definition_;
  mutable int _cached_size_;
  friend struct ::protobuf_pb_2fpublisher_2eproto::TableStruct;
  friend void ::protobuf_pb_2fpublisher_2eproto::InitDefaultsRPCPublishPublisherUpdateRequestImpl();
};
// -------------------------------------------------------------------

class RPCGetPublisherFileRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.RPCGetPublisherFileRequest) */ {
 public:
  RPCGetPublisherFileRequest();
  virtual ~RPCGetPublisherFileRequest();

  RPCGetPublisherFileRequest(const RPCGetPublisherFileRequest& from);

  inline RPCGetPublisherFileRequest& operator=(const RPCGetPublisherFileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RPCGetPublisherFileRequest(RPCGetPublisherFileRequest&& from) noexcept
    : RPCGetPublisherFileRequest() {
    *this = ::std::move(from);
  }

  inline RPCGetPublisherFileRequest& operator=(RPCGetPublisherFileRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RPCGetPublisherFileRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RPCGetPublisherFileRequest* internal_default_instance() {
    return reinterpret_cast<const RPCGetPublisherFileRequest*>(
               &_RPCGetPublisherFileRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(RPCGetPublisherFileRequest* other);
  friend void swap(RPCGetPublisherFileRequest& a, RPCGetPublisherFileRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RPCGetPublisherFileRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  RPCGetPublisherFileRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RPCGetPublisherFileRequest& from);
  void MergeFrom(const RPCGetPublisherFileRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RPCGetPublisherFileRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:pb.RPCGetPublisherFileRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_pb_2fpublisher_2eproto::TableStruct;
  friend void ::protobuf_pb_2fpublisher_2eproto::InitDefaultsRPCGetPublisherFileRequestImpl();
};
// -------------------------------------------------------------------

class RPCGetPublisherFileResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.RPCGetPublisherFileResponse) */ {
 public:
  RPCGetPublisherFileResponse();
  virtual ~RPCGetPublisherFileResponse();

  RPCGetPublisherFileResponse(const RPCGetPublisherFileResponse& from);

  inline RPCGetPublisherFileResponse& operator=(const RPCGetPublisherFileResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RPCGetPublisherFileResponse(RPCGetPublisherFileResponse&& from) noexcept
    : RPCGetPublisherFileResponse() {
    *this = ::std::move(from);
  }

  inline RPCGetPublisherFileResponse& operator=(RPCGetPublisherFileResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RPCGetPublisherFileResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RPCGetPublisherFileResponse* internal_default_instance() {
    return reinterpret_cast<const RPCGetPublisherFileResponse*>(
               &_RPCGetPublisherFileResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(RPCGetPublisherFileResponse* other);
  friend void swap(RPCGetPublisherFileResponse& a, RPCGetPublisherFileResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RPCGetPublisherFileResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  RPCGetPublisherFileResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RPCGetPublisherFileResponse& from);
  void MergeFrom(const RPCGetPublisherFileResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RPCGetPublisherFileResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes file = 1;
  void clear_file();
  static const int kFileFieldNumber = 1;
  const ::std::string& file() const;
  void set_file(const ::std::string& value);
  #if LANG_CXX11
  void set_file(::std::string&& value);
  #endif
  void set_file(const char* value);
  void set_file(const void* value, size_t size);
  ::std::string* mutable_file();
  ::std::string* release_file();
  void set_allocated_file(::std::string* file);

  // @@protoc_insertion_point(class_scope:pb.RPCGetPublisherFileResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr file_;
  mutable int _cached_size_;
  friend struct ::protobuf_pb_2fpublisher_2eproto::TableStruct;
  friend void ::protobuf_pb_2fpublisher_2eproto::InitDefaultsRPCGetPublisherFileResponseImpl();
};
// -------------------------------------------------------------------

class GetPublisherDefinitionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.GetPublisherDefinitionRequest) */ {
 public:
  GetPublisherDefinitionRequest();
  virtual ~GetPublisherDefinitionRequest();

  GetPublisherDefinitionRequest(const GetPublisherDefinitionRequest& from);

  inline GetPublisherDefinitionRequest& operator=(const GetPublisherDefinitionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetPublisherDefinitionRequest(GetPublisherDefinitionRequest&& from) noexcept
    : GetPublisherDefinitionRequest() {
    *this = ::std::move(from);
  }

  inline GetPublisherDefinitionRequest& operator=(GetPublisherDefinitionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPublisherDefinitionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetPublisherDefinitionRequest* internal_default_instance() {
    return reinterpret_cast<const GetPublisherDefinitionRequest*>(
               &_GetPublisherDefinitionRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(GetPublisherDefinitionRequest* other);
  friend void swap(GetPublisherDefinitionRequest& a, GetPublisherDefinitionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetPublisherDefinitionRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetPublisherDefinitionRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetPublisherDefinitionRequest& from);
  void MergeFrom(const GetPublisherDefinitionRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetPublisherDefinitionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pb.GetPublisherDefinitionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_pb_2fpublisher_2eproto::TableStruct;
  friend void ::protobuf_pb_2fpublisher_2eproto::InitDefaultsGetPublisherDefinitionRequestImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PublisherDefinition

// int64 created = 1;
inline void PublisherDefinition::clear_created() {
  created_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PublisherDefinition::created() const {
  // @@protoc_insertion_point(field_get:pb.PublisherDefinition.created)
  return created_;
}
inline void PublisherDefinition::set_created(::google::protobuf::int64 value) {
  
  created_ = value;
  // @@protoc_insertion_point(field_set:pb.PublisherDefinition.created)
}

// map<string, bytes> files = 2;
inline int PublisherDefinition::files_size() const {
  return files_.size();
}
inline void PublisherDefinition::clear_files() {
  files_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
PublisherDefinition::files() const {
  // @@protoc_insertion_point(field_map:pb.PublisherDefinition.files)
  return files_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
PublisherDefinition::mutable_files() {
  // @@protoc_insertion_point(field_mutable_map:pb.PublisherDefinition.files)
  return files_.MutableMap();
}

// map<string, string> links = 3;
inline int PublisherDefinition::links_size() const {
  return links_.size();
}
inline void PublisherDefinition::clear_links() {
  links_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
PublisherDefinition::links() const {
  // @@protoc_insertion_point(field_map:pb.PublisherDefinition.links)
  return links_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
PublisherDefinition::mutable_links() {
  // @@protoc_insertion_point(field_mutable_map:pb.PublisherDefinition.links)
  return links_.MutableMap();
}

// map<string, string> details = 4;
inline int PublisherDefinition::details_size() const {
  return details_.size();
}
inline void PublisherDefinition::clear_details() {
  details_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
PublisherDefinition::details() const {
  // @@protoc_insertion_point(field_map:pb.PublisherDefinition.details)
  return details_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
PublisherDefinition::mutable_details() {
  // @@protoc_insertion_point(field_mutable_map:pb.PublisherDefinition.details)
  return details_.MutableMap();
}

// bool status = 5;
inline void PublisherDefinition::clear_status() {
  status_ = false;
}
inline bool PublisherDefinition::status() const {
  // @@protoc_insertion_point(field_get:pb.PublisherDefinition.status)
  return status_;
}
inline void PublisherDefinition::set_status(bool value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:pb.PublisherDefinition.status)
}

// -------------------------------------------------------------------

// PublisherUpdate

// bytes signature = 2;
inline void PublisherUpdate::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PublisherUpdate::signature() const {
  // @@protoc_insertion_point(field_get:pb.PublisherUpdate.signature)
  return signature_.GetNoArena();
}
inline void PublisherUpdate::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.PublisherUpdate.signature)
}
#if LANG_CXX11
inline void PublisherUpdate::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.PublisherUpdate.signature)
}
#endif
inline void PublisherUpdate::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.PublisherUpdate.signature)
}
inline void PublisherUpdate::set_signature(const void* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.PublisherUpdate.signature)
}
inline ::std::string* PublisherUpdate::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:pb.PublisherUpdate.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PublisherUpdate::release_signature() {
  // @@protoc_insertion_point(field_release:pb.PublisherUpdate.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PublisherUpdate::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:pb.PublisherUpdate.signature)
}

// bytes definition = 3;
inline void PublisherUpdate::clear_definition() {
  definition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PublisherUpdate::definition() const {
  // @@protoc_insertion_point(field_get:pb.PublisherUpdate.definition)
  return definition_.GetNoArena();
}
inline void PublisherUpdate::set_definition(const ::std::string& value) {
  
  definition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.PublisherUpdate.definition)
}
#if LANG_CXX11
inline void PublisherUpdate::set_definition(::std::string&& value) {
  
  definition_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.PublisherUpdate.definition)
}
#endif
inline void PublisherUpdate::set_definition(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  definition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.PublisherUpdate.definition)
}
inline void PublisherUpdate::set_definition(const void* value, size_t size) {
  
  definition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.PublisherUpdate.definition)
}
inline ::std::string* PublisherUpdate::mutable_definition() {
  
  // @@protoc_insertion_point(field_mutable:pb.PublisherUpdate.definition)
  return definition_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PublisherUpdate::release_definition() {
  // @@protoc_insertion_point(field_release:pb.PublisherUpdate.definition)
  
  return definition_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PublisherUpdate::set_allocated_definition(::std::string* definition) {
  if (definition != NULL) {
    
  } else {
    
  }
  definition_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), definition);
  // @@protoc_insertion_point(field_set_allocated:pb.PublisherUpdate.definition)
}

// -------------------------------------------------------------------

// DNPublisherUpdateRequest

// -------------------------------------------------------------------

// DNPublisherUpdateResponse

// .pb.PublisherUpdate update = 1;
inline bool DNPublisherUpdateResponse::has_update() const {
  return this != internal_default_instance() && update_ != NULL;
}
inline void DNPublisherUpdateResponse::clear_update() {
  if (GetArenaNoVirtual() == NULL && update_ != NULL) {
    delete update_;
  }
  update_ = NULL;
}
inline const ::pb::PublisherUpdate& DNPublisherUpdateResponse::update() const {
  const ::pb::PublisherUpdate* p = update_;
  // @@protoc_insertion_point(field_get:pb.DNPublisherUpdateResponse.update)
  return p != NULL ? *p : *reinterpret_cast<const ::pb::PublisherUpdate*>(
      &::pb::_PublisherUpdate_default_instance_);
}
inline ::pb::PublisherUpdate* DNPublisherUpdateResponse::release_update() {
  // @@protoc_insertion_point(field_release:pb.DNPublisherUpdateResponse.update)
  
  ::pb::PublisherUpdate* temp = update_;
  update_ = NULL;
  return temp;
}
inline ::pb::PublisherUpdate* DNPublisherUpdateResponse::mutable_update() {
  
  if (update_ == NULL) {
    update_ = new ::pb::PublisherUpdate;
  }
  // @@protoc_insertion_point(field_mutable:pb.DNPublisherUpdateResponse.update)
  return update_;
}
inline void DNPublisherUpdateResponse::set_allocated_update(::pb::PublisherUpdate* update) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete update_;
  }
  if (update) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      update = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update, submessage_arena);
    }
    
  } else {
    
  }
  update_ = update;
  // @@protoc_insertion_point(field_set_allocated:pb.DNPublisherUpdateResponse.update)
}

// -------------------------------------------------------------------

// RPCPublishPublisherUpdateRequest

// .pb.PublisherDefinition definition = 1;
inline bool RPCPublishPublisherUpdateRequest::has_definition() const {
  return this != internal_default_instance() && definition_ != NULL;
}
inline void RPCPublishPublisherUpdateRequest::clear_definition() {
  if (GetArenaNoVirtual() == NULL && definition_ != NULL) {
    delete definition_;
  }
  definition_ = NULL;
}
inline const ::pb::PublisherDefinition& RPCPublishPublisherUpdateRequest::definition() const {
  const ::pb::PublisherDefinition* p = definition_;
  // @@protoc_insertion_point(field_get:pb.RPCPublishPublisherUpdateRequest.definition)
  return p != NULL ? *p : *reinterpret_cast<const ::pb::PublisherDefinition*>(
      &::pb::_PublisherDefinition_default_instance_);
}
inline ::pb::PublisherDefinition* RPCPublishPublisherUpdateRequest::release_definition() {
  // @@protoc_insertion_point(field_release:pb.RPCPublishPublisherUpdateRequest.definition)
  
  ::pb::PublisherDefinition* temp = definition_;
  definition_ = NULL;
  return temp;
}
inline ::pb::PublisherDefinition* RPCPublishPublisherUpdateRequest::mutable_definition() {
  
  if (definition_ == NULL) {
    definition_ = new ::pb::PublisherDefinition;
  }
  // @@protoc_insertion_point(field_mutable:pb.RPCPublishPublisherUpdateRequest.definition)
  return definition_;
}
inline void RPCPublishPublisherUpdateRequest::set_allocated_definition(::pb::PublisherDefinition* definition) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete definition_;
  }
  if (definition) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      definition = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, definition, submessage_arena);
    }
    
  } else {
    
  }
  definition_ = definition;
  // @@protoc_insertion_point(field_set_allocated:pb.RPCPublishPublisherUpdateRequest.definition)
}

// -------------------------------------------------------------------

// RPCGetPublisherFileRequest

// string name = 1;
inline void RPCGetPublisherFileRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RPCGetPublisherFileRequest::name() const {
  // @@protoc_insertion_point(field_get:pb.RPCGetPublisherFileRequest.name)
  return name_.GetNoArena();
}
inline void RPCGetPublisherFileRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.RPCGetPublisherFileRequest.name)
}
#if LANG_CXX11
inline void RPCGetPublisherFileRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.RPCGetPublisherFileRequest.name)
}
#endif
inline void RPCGetPublisherFileRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.RPCGetPublisherFileRequest.name)
}
inline void RPCGetPublisherFileRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.RPCGetPublisherFileRequest.name)
}
inline ::std::string* RPCGetPublisherFileRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.RPCGetPublisherFileRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RPCGetPublisherFileRequest::release_name() {
  // @@protoc_insertion_point(field_release:pb.RPCGetPublisherFileRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RPCGetPublisherFileRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pb.RPCGetPublisherFileRequest.name)
}

// -------------------------------------------------------------------

// RPCGetPublisherFileResponse

// bytes file = 1;
inline void RPCGetPublisherFileResponse::clear_file() {
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RPCGetPublisherFileResponse::file() const {
  // @@protoc_insertion_point(field_get:pb.RPCGetPublisherFileResponse.file)
  return file_.GetNoArena();
}
inline void RPCGetPublisherFileResponse::set_file(const ::std::string& value) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.RPCGetPublisherFileResponse.file)
}
#if LANG_CXX11
inline void RPCGetPublisherFileResponse::set_file(::std::string&& value) {
  
  file_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.RPCGetPublisherFileResponse.file)
}
#endif
inline void RPCGetPublisherFileResponse::set_file(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.RPCGetPublisherFileResponse.file)
}
inline void RPCGetPublisherFileResponse::set_file(const void* value, size_t size) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.RPCGetPublisherFileResponse.file)
}
inline ::std::string* RPCGetPublisherFileResponse::mutable_file() {
  
  // @@protoc_insertion_point(field_mutable:pb.RPCGetPublisherFileResponse.file)
  return file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RPCGetPublisherFileResponse::release_file() {
  // @@protoc_insertion_point(field_release:pb.RPCGetPublisherFileResponse.file)
  
  return file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RPCGetPublisherFileResponse::set_allocated_file(::std::string* file) {
  if (file != NULL) {
    
  } else {
    
  }
  file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file);
  // @@protoc_insertion_point(field_set_allocated:pb.RPCGetPublisherFileResponse.file)
}

// -------------------------------------------------------------------

// GetPublisherDefinitionRequest

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_pb_2fpublisher_2eproto__INCLUDED
