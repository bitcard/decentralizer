// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pb/addressbook.proto

#ifndef PROTOBUF_pb_2faddressbook_2eproto__INCLUDED
#define PROTOBUF_pb_2faddressbook_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
// @@protoc_insertion_point(includes)

namespace protobuf_pb_2faddressbook_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void InitDefaultsDNPeerImpl();
void InitDefaultsDNPeer();
void InitDefaultsRPCAddressBookPeerRequestImpl();
void InitDefaultsRPCAddressBookPeerRequest();
void InitDefaultsRPCAddressBookPeerResponseImpl();
void InitDefaultsRPCAddressBookPeerResponse();
inline void InitDefaults() {
  InitDefaultsDNPeer();
  InitDefaultsRPCAddressBookPeerRequest();
  InitDefaultsRPCAddressBookPeerResponse();
}
}  // namespace protobuf_pb_2faddressbook_2eproto
namespace pb {
class DNPeer;
class DNPeerDefaultTypeInternal;
extern DNPeerDefaultTypeInternal _DNPeer_default_instance_;
class RPCAddressBookPeerRequest;
class RPCAddressBookPeerRequestDefaultTypeInternal;
extern RPCAddressBookPeerRequestDefaultTypeInternal _RPCAddressBookPeerRequest_default_instance_;
class RPCAddressBookPeerResponse;
class RPCAddressBookPeerResponseDefaultTypeInternal;
extern RPCAddressBookPeerResponseDefaultTypeInternal _RPCAddressBookPeerResponse_default_instance_;
}  // namespace pb
namespace pb {

// ===================================================================

class DNPeer : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:pb.DNPeer) */ {
 public:
  DNPeer();
  virtual ~DNPeer();

  DNPeer(const DNPeer& from);

  inline DNPeer& operator=(const DNPeer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DNPeer(DNPeer&& from) noexcept
    : DNPeer() {
    *this = ::std::move(from);
  }

  inline DNPeer& operator=(DNPeer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const DNPeer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DNPeer* internal_default_instance() {
    return reinterpret_cast<const DNPeer*>(
               &_DNPeer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(DNPeer* other);
  friend void swap(DNPeer& a, DNPeer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DNPeer* New() const PROTOBUF_FINAL { return New(NULL); }

  DNPeer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DNPeer& from);
  void MergeFrom(const DNPeer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DNPeer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string pId = 2;
  void clear_pid();
  static const int kPIdFieldNumber = 2;
  const ::std::string& pid() const;
  void set_pid(const ::std::string& value);
  #if LANG_CXX11
  void set_pid(::std::string&& value);
  #endif
  void set_pid(const char* value);
  void set_pid(const char* value, size_t size);
  ::std::string* mutable_pid();
  ::std::string* release_pid();
  void set_allocated_pid(::std::string* pid);

  // uint64 dnId = 1;
  void clear_dnid();
  static const int kDnIdFieldNumber = 1;
  ::google::protobuf::uint64 dnid() const;
  void set_dnid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.DNPeer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr pid_;
  ::google::protobuf::uint64 dnid_;
  mutable int _cached_size_;
  friend struct ::protobuf_pb_2faddressbook_2eproto::TableStruct;
  friend void ::protobuf_pb_2faddressbook_2eproto::InitDefaultsDNPeerImpl();
};
// -------------------------------------------------------------------

class RPCAddressBookPeerRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:pb.RPCAddressBookPeerRequest) */ {
 public:
  RPCAddressBookPeerRequest();
  virtual ~RPCAddressBookPeerRequest();

  RPCAddressBookPeerRequest(const RPCAddressBookPeerRequest& from);

  inline RPCAddressBookPeerRequest& operator=(const RPCAddressBookPeerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RPCAddressBookPeerRequest(RPCAddressBookPeerRequest&& from) noexcept
    : RPCAddressBookPeerRequest() {
    *this = ::std::move(from);
  }

  inline RPCAddressBookPeerRequest& operator=(RPCAddressBookPeerRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const RPCAddressBookPeerRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RPCAddressBookPeerRequest* internal_default_instance() {
    return reinterpret_cast<const RPCAddressBookPeerRequest*>(
               &_RPCAddressBookPeerRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(RPCAddressBookPeerRequest* other);
  friend void swap(RPCAddressBookPeerRequest& a, RPCAddressBookPeerRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RPCAddressBookPeerRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  RPCAddressBookPeerRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const RPCAddressBookPeerRequest& from);
  void MergeFrom(const RPCAddressBookPeerRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RPCAddressBookPeerRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string pId = 2;
  void clear_pid();
  static const int kPIdFieldNumber = 2;
  const ::std::string& pid() const;
  void set_pid(const ::std::string& value);
  #if LANG_CXX11
  void set_pid(::std::string&& value);
  #endif
  void set_pid(const char* value);
  void set_pid(const char* value, size_t size);
  ::std::string* mutable_pid();
  ::std::string* release_pid();
  void set_allocated_pid(::std::string* pid);

  // uint64 dnId = 1;
  void clear_dnid();
  static const int kDnIdFieldNumber = 1;
  ::google::protobuf::uint64 dnid() const;
  void set_dnid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pb.RPCAddressBookPeerRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr pid_;
  ::google::protobuf::uint64 dnid_;
  mutable int _cached_size_;
  friend struct ::protobuf_pb_2faddressbook_2eproto::TableStruct;
  friend void ::protobuf_pb_2faddressbook_2eproto::InitDefaultsRPCAddressBookPeerRequestImpl();
};
// -------------------------------------------------------------------

class RPCAddressBookPeerResponse : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:pb.RPCAddressBookPeerResponse) */ {
 public:
  RPCAddressBookPeerResponse();
  virtual ~RPCAddressBookPeerResponse();

  RPCAddressBookPeerResponse(const RPCAddressBookPeerResponse& from);

  inline RPCAddressBookPeerResponse& operator=(const RPCAddressBookPeerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RPCAddressBookPeerResponse(RPCAddressBookPeerResponse&& from) noexcept
    : RPCAddressBookPeerResponse() {
    *this = ::std::move(from);
  }

  inline RPCAddressBookPeerResponse& operator=(RPCAddressBookPeerResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const RPCAddressBookPeerResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RPCAddressBookPeerResponse* internal_default_instance() {
    return reinterpret_cast<const RPCAddressBookPeerResponse*>(
               &_RPCAddressBookPeerResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(RPCAddressBookPeerResponse* other);
  friend void swap(RPCAddressBookPeerResponse& a, RPCAddressBookPeerResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RPCAddressBookPeerResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  RPCAddressBookPeerResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const RPCAddressBookPeerResponse& from);
  void MergeFrom(const RPCAddressBookPeerResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RPCAddressBookPeerResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .pb.DNPeer info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::pb::DNPeer& info() const;
  ::pb::DNPeer* release_info();
  ::pb::DNPeer* mutable_info();
  void set_allocated_info(::pb::DNPeer* info);

  // @@protoc_insertion_point(class_scope:pb.RPCAddressBookPeerResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::pb::DNPeer* info_;
  mutable int _cached_size_;
  friend struct ::protobuf_pb_2faddressbook_2eproto::TableStruct;
  friend void ::protobuf_pb_2faddressbook_2eproto::InitDefaultsRPCAddressBookPeerResponseImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DNPeer

// uint64 dnId = 1;
inline void DNPeer::clear_dnid() {
  dnid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DNPeer::dnid() const {
  // @@protoc_insertion_point(field_get:pb.DNPeer.dnId)
  return dnid_;
}
inline void DNPeer::set_dnid(::google::protobuf::uint64 value) {
  
  dnid_ = value;
  // @@protoc_insertion_point(field_set:pb.DNPeer.dnId)
}

// string pId = 2;
inline void DNPeer::clear_pid() {
  pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DNPeer::pid() const {
  // @@protoc_insertion_point(field_get:pb.DNPeer.pId)
  return pid_.GetNoArena();
}
inline void DNPeer::set_pid(const ::std::string& value) {
  
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.DNPeer.pId)
}
#if LANG_CXX11
inline void DNPeer::set_pid(::std::string&& value) {
  
  pid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.DNPeer.pId)
}
#endif
inline void DNPeer::set_pid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.DNPeer.pId)
}
inline void DNPeer::set_pid(const char* value, size_t size) {
  
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.DNPeer.pId)
}
inline ::std::string* DNPeer::mutable_pid() {
  
  // @@protoc_insertion_point(field_mutable:pb.DNPeer.pId)
  return pid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DNPeer::release_pid() {
  // @@protoc_insertion_point(field_release:pb.DNPeer.pId)
  
  return pid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DNPeer::set_allocated_pid(::std::string* pid) {
  if (pid != NULL) {
    
  } else {
    
  }
  pid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pid);
  // @@protoc_insertion_point(field_set_allocated:pb.DNPeer.pId)
}

// -------------------------------------------------------------------

// RPCAddressBookPeerRequest

// uint64 dnId = 1;
inline void RPCAddressBookPeerRequest::clear_dnid() {
  dnid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 RPCAddressBookPeerRequest::dnid() const {
  // @@protoc_insertion_point(field_get:pb.RPCAddressBookPeerRequest.dnId)
  return dnid_;
}
inline void RPCAddressBookPeerRequest::set_dnid(::google::protobuf::uint64 value) {
  
  dnid_ = value;
  // @@protoc_insertion_point(field_set:pb.RPCAddressBookPeerRequest.dnId)
}

// string pId = 2;
inline void RPCAddressBookPeerRequest::clear_pid() {
  pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RPCAddressBookPeerRequest::pid() const {
  // @@protoc_insertion_point(field_get:pb.RPCAddressBookPeerRequest.pId)
  return pid_.GetNoArena();
}
inline void RPCAddressBookPeerRequest::set_pid(const ::std::string& value) {
  
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.RPCAddressBookPeerRequest.pId)
}
#if LANG_CXX11
inline void RPCAddressBookPeerRequest::set_pid(::std::string&& value) {
  
  pid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.RPCAddressBookPeerRequest.pId)
}
#endif
inline void RPCAddressBookPeerRequest::set_pid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.RPCAddressBookPeerRequest.pId)
}
inline void RPCAddressBookPeerRequest::set_pid(const char* value, size_t size) {
  
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.RPCAddressBookPeerRequest.pId)
}
inline ::std::string* RPCAddressBookPeerRequest::mutable_pid() {
  
  // @@protoc_insertion_point(field_mutable:pb.RPCAddressBookPeerRequest.pId)
  return pid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RPCAddressBookPeerRequest::release_pid() {
  // @@protoc_insertion_point(field_release:pb.RPCAddressBookPeerRequest.pId)
  
  return pid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RPCAddressBookPeerRequest::set_allocated_pid(::std::string* pid) {
  if (pid != NULL) {
    
  } else {
    
  }
  pid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pid);
  // @@protoc_insertion_point(field_set_allocated:pb.RPCAddressBookPeerRequest.pId)
}

// -------------------------------------------------------------------

// RPCAddressBookPeerResponse

// .pb.DNPeer info = 1;
inline bool RPCAddressBookPeerResponse::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void RPCAddressBookPeerResponse::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}
inline const ::pb::DNPeer& RPCAddressBookPeerResponse::info() const {
  const ::pb::DNPeer* p = info_;
  // @@protoc_insertion_point(field_get:pb.RPCAddressBookPeerResponse.info)
  return p != NULL ? *p : *reinterpret_cast<const ::pb::DNPeer*>(
      &::pb::_DNPeer_default_instance_);
}
inline ::pb::DNPeer* RPCAddressBookPeerResponse::release_info() {
  // @@protoc_insertion_point(field_release:pb.RPCAddressBookPeerResponse.info)
  
  ::pb::DNPeer* temp = info_;
  info_ = NULL;
  return temp;
}
inline ::pb::DNPeer* RPCAddressBookPeerResponse::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::pb::DNPeer;
  }
  // @@protoc_insertion_point(field_mutable:pb.RPCAddressBookPeerResponse.info)
  return info_;
}
inline void RPCAddressBookPeerResponse::set_allocated_info(::pb::DNPeer* info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete info_;
  }
  if (info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    
  } else {
    
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:pb.RPCAddressBookPeerResponse.info)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_pb_2faddressbook_2eproto__INCLUDED
