// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pb/addressbook.proto

#include "pb/addressbook.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace pb {
class DNPeerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DNPeer>
      _instance;
} _DNPeer_default_instance_;
class RPCAddressBookPeerRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RPCAddressBookPeerRequest>
      _instance;
} _RPCAddressBookPeerRequest_default_instance_;
class RPCAddressBookPeerResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RPCAddressBookPeerResponse>
      _instance;
} _RPCAddressBookPeerResponse_default_instance_;
}  // namespace pb
namespace protobuf_pb_2faddressbook_2eproto {
void InitDefaultsDNPeerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::pb::_DNPeer_default_instance_;
    new (ptr) ::pb::DNPeer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::DNPeer::InitAsDefaultInstance();
}

void InitDefaultsDNPeer() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDNPeerImpl);
}

void InitDefaultsRPCAddressBookPeerRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::pb::_RPCAddressBookPeerRequest_default_instance_;
    new (ptr) ::pb::RPCAddressBookPeerRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::RPCAddressBookPeerRequest::InitAsDefaultInstance();
}

void InitDefaultsRPCAddressBookPeerRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRPCAddressBookPeerRequestImpl);
}

void InitDefaultsRPCAddressBookPeerResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_pb_2faddressbook_2eproto::InitDefaultsDNPeer();
  {
    void* ptr = &::pb::_RPCAddressBookPeerResponse_default_instance_;
    new (ptr) ::pb::RPCAddressBookPeerResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::RPCAddressBookPeerResponse::InitAsDefaultInstance();
}

void InitDefaultsRPCAddressBookPeerResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRPCAddressBookPeerResponseImpl);
}

}  // namespace protobuf_pb_2faddressbook_2eproto
namespace pb {

// ===================================================================

void DNPeer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DNPeer::kDnIdFieldNumber;
const int DNPeer::kPIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DNPeer::DNPeer()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_pb_2faddressbook_2eproto::InitDefaultsDNPeer();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.DNPeer)
}
DNPeer::DNPeer(const DNPeer& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pid().size() > 0) {
    pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pid_);
  }
  dnid_ = from.dnid_;
  // @@protoc_insertion_point(copy_constructor:pb.DNPeer)
}

void DNPeer::SharedCtor() {
  pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dnid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

DNPeer::~DNPeer() {
  // @@protoc_insertion_point(destructor:pb.DNPeer)
  SharedDtor();
}

void DNPeer::SharedDtor() {
  pid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DNPeer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const DNPeer& DNPeer::default_instance() {
  ::protobuf_pb_2faddressbook_2eproto::InitDefaultsDNPeer();
  return *internal_default_instance();
}

DNPeer* DNPeer::New(::google::protobuf::Arena* arena) const {
  DNPeer* n = new DNPeer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DNPeer::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.DNPeer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dnid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool DNPeer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:pb.DNPeer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 dnId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dnid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pid().data(), static_cast<int>(this->pid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.DNPeer.pId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.DNPeer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.DNPeer)
  return false;
#undef DO_
}

void DNPeer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.DNPeer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 dnId = 1;
  if (this->dnid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->dnid(), output);
  }

  // string pId = 2;
  if (this->pid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pid().data(), static_cast<int>(this->pid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.DNPeer.pId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pid(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:pb.DNPeer)
}

size_t DNPeer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.DNPeer)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string pId = 2;
  if (this->pid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pid());
  }

  // uint64 dnId = 1;
  if (this->dnid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dnid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DNPeer::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const DNPeer*>(&from));
}

void DNPeer::MergeFrom(const DNPeer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.DNPeer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pid().size() > 0) {

    pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pid_);
  }
  if (from.dnid() != 0) {
    set_dnid(from.dnid());
  }
}

void DNPeer::CopyFrom(const DNPeer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.DNPeer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DNPeer::IsInitialized() const {
  return true;
}

void DNPeer::Swap(DNPeer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DNPeer::InternalSwap(DNPeer* other) {
  using std::swap;
  pid_.Swap(&other->pid_);
  swap(dnid_, other->dnid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string DNPeer::GetTypeName() const {
  return "pb.DNPeer";
}


// ===================================================================

void RPCAddressBookPeerRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RPCAddressBookPeerRequest::kDnIdFieldNumber;
const int RPCAddressBookPeerRequest::kPIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RPCAddressBookPeerRequest::RPCAddressBookPeerRequest()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_pb_2faddressbook_2eproto::InitDefaultsRPCAddressBookPeerRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RPCAddressBookPeerRequest)
}
RPCAddressBookPeerRequest::RPCAddressBookPeerRequest(const RPCAddressBookPeerRequest& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pid().size() > 0) {
    pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pid_);
  }
  dnid_ = from.dnid_;
  // @@protoc_insertion_point(copy_constructor:pb.RPCAddressBookPeerRequest)
}

void RPCAddressBookPeerRequest::SharedCtor() {
  pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dnid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

RPCAddressBookPeerRequest::~RPCAddressBookPeerRequest() {
  // @@protoc_insertion_point(destructor:pb.RPCAddressBookPeerRequest)
  SharedDtor();
}

void RPCAddressBookPeerRequest::SharedDtor() {
  pid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RPCAddressBookPeerRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const RPCAddressBookPeerRequest& RPCAddressBookPeerRequest::default_instance() {
  ::protobuf_pb_2faddressbook_2eproto::InitDefaultsRPCAddressBookPeerRequest();
  return *internal_default_instance();
}

RPCAddressBookPeerRequest* RPCAddressBookPeerRequest::New(::google::protobuf::Arena* arena) const {
  RPCAddressBookPeerRequest* n = new RPCAddressBookPeerRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RPCAddressBookPeerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RPCAddressBookPeerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dnid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool RPCAddressBookPeerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:pb.RPCAddressBookPeerRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 dnId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dnid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pid().data(), static_cast<int>(this->pid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.RPCAddressBookPeerRequest.pId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RPCAddressBookPeerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RPCAddressBookPeerRequest)
  return false;
#undef DO_
}

void RPCAddressBookPeerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RPCAddressBookPeerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 dnId = 1;
  if (this->dnid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->dnid(), output);
  }

  // string pId = 2;
  if (this->pid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pid().data(), static_cast<int>(this->pid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.RPCAddressBookPeerRequest.pId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pid(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:pb.RPCAddressBookPeerRequest)
}

size_t RPCAddressBookPeerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RPCAddressBookPeerRequest)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string pId = 2;
  if (this->pid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pid());
  }

  // uint64 dnId = 1;
  if (this->dnid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dnid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RPCAddressBookPeerRequest::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const RPCAddressBookPeerRequest*>(&from));
}

void RPCAddressBookPeerRequest::MergeFrom(const RPCAddressBookPeerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RPCAddressBookPeerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pid().size() > 0) {

    pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pid_);
  }
  if (from.dnid() != 0) {
    set_dnid(from.dnid());
  }
}

void RPCAddressBookPeerRequest::CopyFrom(const RPCAddressBookPeerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RPCAddressBookPeerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RPCAddressBookPeerRequest::IsInitialized() const {
  return true;
}

void RPCAddressBookPeerRequest::Swap(RPCAddressBookPeerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RPCAddressBookPeerRequest::InternalSwap(RPCAddressBookPeerRequest* other) {
  using std::swap;
  pid_.Swap(&other->pid_);
  swap(dnid_, other->dnid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string RPCAddressBookPeerRequest::GetTypeName() const {
  return "pb.RPCAddressBookPeerRequest";
}


// ===================================================================

void RPCAddressBookPeerResponse::InitAsDefaultInstance() {
  ::pb::_RPCAddressBookPeerResponse_default_instance_._instance.get_mutable()->info_ = const_cast< ::pb::DNPeer*>(
      ::pb::DNPeer::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RPCAddressBookPeerResponse::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RPCAddressBookPeerResponse::RPCAddressBookPeerResponse()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_pb_2faddressbook_2eproto::InitDefaultsRPCAddressBookPeerResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RPCAddressBookPeerResponse)
}
RPCAddressBookPeerResponse::RPCAddressBookPeerResponse(const RPCAddressBookPeerResponse& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::pb::DNPeer(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:pb.RPCAddressBookPeerResponse)
}

void RPCAddressBookPeerResponse::SharedCtor() {
  info_ = NULL;
  _cached_size_ = 0;
}

RPCAddressBookPeerResponse::~RPCAddressBookPeerResponse() {
  // @@protoc_insertion_point(destructor:pb.RPCAddressBookPeerResponse)
  SharedDtor();
}

void RPCAddressBookPeerResponse::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void RPCAddressBookPeerResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const RPCAddressBookPeerResponse& RPCAddressBookPeerResponse::default_instance() {
  ::protobuf_pb_2faddressbook_2eproto::InitDefaultsRPCAddressBookPeerResponse();
  return *internal_default_instance();
}

RPCAddressBookPeerResponse* RPCAddressBookPeerResponse::New(::google::protobuf::Arena* arena) const {
  RPCAddressBookPeerResponse* n = new RPCAddressBookPeerResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RPCAddressBookPeerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RPCAddressBookPeerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  _internal_metadata_.Clear();
}

bool RPCAddressBookPeerResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:pb.RPCAddressBookPeerResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .pb.DNPeer info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RPCAddressBookPeerResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RPCAddressBookPeerResponse)
  return false;
#undef DO_
}

void RPCAddressBookPeerResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RPCAddressBookPeerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .pb.DNPeer info = 1;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, *this->info_, output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:pb.RPCAddressBookPeerResponse)
}

size_t RPCAddressBookPeerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RPCAddressBookPeerResponse)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // .pb.DNPeer info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RPCAddressBookPeerResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const RPCAddressBookPeerResponse*>(&from));
}

void RPCAddressBookPeerResponse::MergeFrom(const RPCAddressBookPeerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RPCAddressBookPeerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    mutable_info()->::pb::DNPeer::MergeFrom(from.info());
  }
}

void RPCAddressBookPeerResponse::CopyFrom(const RPCAddressBookPeerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RPCAddressBookPeerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RPCAddressBookPeerResponse::IsInitialized() const {
  return true;
}

void RPCAddressBookPeerResponse::Swap(RPCAddressBookPeerResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RPCAddressBookPeerResponse::InternalSwap(RPCAddressBookPeerResponse* other) {
  using std::swap;
  swap(info_, other->info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::std::string RPCAddressBookPeerResponse::GetTypeName() const {
  return "pb.RPCAddressBookPeerResponse";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pb

// @@protoc_insertion_point(global_scope)
