// Code generated by protoc-gen-go.
// source: introduce.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	introduce.proto
	rpc.proto

It has these top-level messages:
	IntroductionRequest
	IntroductionReply
	Peer
	HelloRequest
	HelloReply
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type IntroductionRequest struct {
	Hash string `protobuf:"bytes,1,opt,name=hash" json:"hash,omitempty"`
}

func (m *IntroductionRequest) Reset()                    { *m = IntroductionRequest{} }
func (m *IntroductionRequest) String() string            { return proto.CompactTextString(m) }
func (*IntroductionRequest) ProtoMessage()               {}
func (*IntroductionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *IntroductionRequest) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type IntroductionReply struct {
	Me     *Peer   `protobuf:"bytes,1,opt,name=me" json:"me,omitempty"`
	Others []*Peer `protobuf:"bytes,2,rep,name=others" json:"others,omitempty"`
}

func (m *IntroductionReply) Reset()                    { *m = IntroductionReply{} }
func (m *IntroductionReply) String() string            { return proto.CompactTextString(m) }
func (*IntroductionReply) ProtoMessage()               {}
func (*IntroductionReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *IntroductionReply) GetMe() *Peer {
	if m != nil {
		return m.Me
	}
	return nil
}

func (m *IntroductionReply) GetOthers() []*Peer {
	if m != nil {
		return m.Others
	}
	return nil
}

type Peer struct {
	Ip      string            `protobuf:"bytes,1,opt,name=ip" json:"ip,omitempty"`
	Port    uint32            `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
	RpcPort uint32            `protobuf:"varint,3,opt,name=rpcPort" json:"rpcPort,omitempty"`
	Details map[string]string `protobuf:"bytes,4,rep,name=details" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Peer) Reset()                    { *m = Peer{} }
func (m *Peer) String() string            { return proto.CompactTextString(m) }
func (*Peer) ProtoMessage()               {}
func (*Peer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Peer) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Peer) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Peer) GetRpcPort() uint32 {
	if m != nil {
		return m.RpcPort
	}
	return 0
}

func (m *Peer) GetDetails() map[string]string {
	if m != nil {
		return m.Details
	}
	return nil
}

func init() {
	proto.RegisterType((*IntroductionRequest)(nil), "pb.IntroductionRequest")
	proto.RegisterType((*IntroductionReply)(nil), "pb.IntroductionReply")
	proto.RegisterType((*Peer)(nil), "pb.peer")
}

func init() { proto.RegisterFile("introduce.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 238 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x90, 0xcd, 0x4a, 0xc4, 0x30,
	0x14, 0x85, 0x49, 0x5a, 0x67, 0x9c, 0xeb, 0xff, 0x55, 0x21, 0xb8, 0x2a, 0x5d, 0x8d, 0x9b, 0x0a,
	0xba, 0x91, 0x59, 0xeb, 0xc2, 0x95, 0x92, 0x37, 0x68, 0x67, 0x2e, 0x34, 0xd8, 0x69, 0xae, 0x69,
	0x2a, 0xf4, 0xb1, 0x7c, 0x43, 0x69, 0x26, 0x85, 0xe9, 0xee, 0xdc, 0xef, 0x1c, 0xf8, 0x42, 0xe0,
	0xca, 0xb4, 0xde, 0xd9, 0x5d, 0xbf, 0xa5, 0x82, 0x9d, 0xf5, 0x16, 0x25, 0x57, 0xf9, 0x23, 0xdc,
	0x7e, 0x44, 0xec, 0x8d, 0x6d, 0x35, 0xfd, 0xf4, 0xd4, 0x79, 0x44, 0x48, 0xeb, 0xb2, 0xab, 0x95,
	0xc8, 0xc4, 0x7a, 0xa5, 0x43, 0xce, 0x3f, 0xe1, 0x66, 0x3e, 0xe5, 0x66, 0x40, 0x05, 0x72, 0x4f,
	0x61, 0x76, 0xf6, 0x7c, 0x5a, 0x70, 0x55, 0x30, 0x91, 0xd3, 0x72, 0x4f, 0x98, 0xc1, 0xc2, 0xfa,
	0x9a, 0x5c, 0xa7, 0x64, 0x96, 0xcc, 0xda, 0xc8, 0xf3, 0x3f, 0x01, 0xe9, 0x08, 0xf0, 0x12, 0xa4,
	0xe1, 0xe8, 0x92, 0x86, 0x47, 0x3b, 0x5b, 0xe7, 0x95, 0xcc, 0xc4, 0xfa, 0x42, 0x87, 0x8c, 0x0a,
	0x96, 0x8e, 0xb7, 0x5f, 0x23, 0x4e, 0x02, 0x9e, 0x4e, 0x7c, 0x82, 0xe5, 0x8e, 0x7c, 0x69, 0x9a,
	0x4e, 0xa5, 0xc1, 0x74, 0x3f, 0x99, 0x8a, 0xb7, 0x03, 0x7f, 0x6f, 0xbd, 0x1b, 0xf4, 0xb4, 0x7a,
	0xd8, 0xc0, 0xf9, 0x71, 0x81, 0xd7, 0x90, 0x7c, 0xd3, 0x10, 0xfd, 0x63, 0xc4, 0x3b, 0x38, 0xf9,
	0x2d, 0x9b, 0x9e, 0xc2, 0x0b, 0x56, 0xfa, 0x70, 0x6c, 0xe4, 0xab, 0xa8, 0x16, 0xe1, 0xeb, 0x5e,
	0xfe, 0x03, 0x00, 0x00, 0xff, 0xff, 0xef, 0x36, 0xa6, 0x5f, 0x4d, 0x01, 0x00, 0x00,
}
